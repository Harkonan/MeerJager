// <auto-generated />
using System;
using MeerJager.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeerJager.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20200721120552_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("MeerJager.Data.Database.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Class");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassName = "Frigate"
                        },
                        new
                        {
                            Id = 2,
                            ClassName = "Merchant"
                        },
                        new
                        {
                            Id = 3,
                            ClassName = "Sloop"
                        },
                        new
                        {
                            Id = 4,
                            ClassName = "Destroyer"
                        });
                });

            modelBuilder.Entity("MeerJager.Data.Database.Range", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Min")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Range");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Max = 130,
                            Min = 100
                        },
                        new
                        {
                            Id = 2,
                            Max = 85,
                            Min = 8
                        },
                        new
                        {
                            Id = 3,
                            Max = 130,
                            Min = 120
                        },
                        new
                        {
                            Id = 4,
                            Max = 91,
                            Min = 11
                        },
                        new
                        {
                            Id = 5,
                            Max = 150,
                            Min = 140
                        },
                        new
                        {
                            Id = 6,
                            Max = 94,
                            Min = 11
                        },
                        new
                        {
                            Id = 7,
                            Max = 50,
                            Min = 30
                        },
                        new
                        {
                            Id = 8,
                            Max = 150,
                            Min = 90
                        },
                        new
                        {
                            Id = 9,
                            Max = 50,
                            Min = 20
                        },
                        new
                        {
                            Id = 10,
                            Max = 19850,
                            Min = 500
                        },
                        new
                        {
                            Id = 15,
                            Max = 10,
                            Min = 5
                        },
                        new
                        {
                            Id = 16,
                            Max = 3960,
                            Min = 500
                        },
                        new
                        {
                            Id = 11,
                            Max = 110,
                            Min = 80
                        },
                        new
                        {
                            Id = 12,
                            Max = 1000,
                            Min = 0
                        },
                        new
                        {
                            Id = 13,
                            Max = 110,
                            Min = 80
                        },
                        new
                        {
                            Id = 14,
                            Max = 1000,
                            Min = 0
                        },
                        new
                        {
                            Id = 17,
                            Max = 25,
                            Min = 15
                        },
                        new
                        {
                            Id = 18,
                            Max = 15000,
                            Min = 500
                        });
                });

            modelBuilder.Entity("MeerJager.Data.Database.Ship", b =>
                {
                    b.Property<int>("ShipID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HealthId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShipID");

                    b.HasIndex("ClassId");

                    b.HasIndex("HealthId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Ships");

                    b.HasData(
                        new
                        {
                            ShipID = 1,
                            ClassId = 4,
                            HealthId = 1,
                            Name = "Hunt",
                            ProfileId = 2
                        },
                        new
                        {
                            ShipID = 2,
                            ClassId = 3,
                            HealthId = 3,
                            Name = "Black Swan",
                            ProfileId = 4
                        },
                        new
                        {
                            ShipID = 3,
                            ClassId = 1,
                            HealthId = 5,
                            Name = "Loch",
                            ProfileId = 6
                        },
                        new
                        {
                            ShipID = 4,
                            ClassId = 2,
                            HealthId = 7,
                            Name = "Vessel",
                            ProfileId = 8
                        });
                });

            modelBuilder.Entity("MeerJager.Data.Database.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DamageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPercent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("RangeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReloadRounds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DamageId");

                    b.HasIndex("RangeId");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DamageId = 9,
                            HitPercent = 80,
                            Name = "Twin Mounted QF 4-inch Mark XVI",
                            RangeId = 10,
                            ReloadRounds = 2,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            DamageId = 15,
                            HitPercent = 80,
                            Name = "Quad Mounted QF 2-pounder Mk. VIII AA",
                            RangeId = 16,
                            ReloadRounds = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            DamageId = 17,
                            HitPercent = 70,
                            Name = "QF 4 inch gun MK V",
                            RangeId = 18,
                            ReloadRounds = 4,
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            DamageId = 11,
                            HitPercent = 80,
                            Name = "Hedgehog Depth Charge",
                            RangeId = 12,
                            ReloadRounds = 5,
                            Type = 3
                        },
                        new
                        {
                            Id = 6,
                            DamageId = 11,
                            HitPercent = 90,
                            Name = "Squid Depth Charge",
                            RangeId = 12,
                            ReloadRounds = 3,
                            Type = 3
                        },
                        new
                        {
                            Id = 4,
                            DamageId = 13,
                            HitPercent = 90,
                            Name = "Depth Charge",
                            RangeId = 14,
                            ReloadRounds = 4,
                            Type = 3
                        });
                });

            modelBuilder.Entity("MeerJager.Data.Database.WeaponMount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlwaysExists")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MountName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ShipId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShipId");

                    b.ToTable("Mounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlwaysExists = false,
                            MountName = "Fore Mounted Battery 1",
                            ShipId = 1
                        },
                        new
                        {
                            Id = 2,
                            AlwaysExists = false,
                            MountName = "Fore Mounted Battery 2",
                            ShipId = 1
                        },
                        new
                        {
                            Id = 3,
                            AlwaysExists = false,
                            MountName = "Aft Mounted Battery 1",
                            ShipId = 1
                        },
                        new
                        {
                            Id = 4,
                            AlwaysExists = false,
                            MountName = "Aft Mounted Battery 2",
                            ShipId = 1
                        },
                        new
                        {
                            Id = 17,
                            AlwaysExists = true,
                            MountName = "Rack",
                            ShipId = 1
                        },
                        new
                        {
                            Id = 5,
                            AlwaysExists = true,
                            MountName = "Rack",
                            ShipId = 2
                        },
                        new
                        {
                            Id = 6,
                            AlwaysExists = true,
                            MountName = "AA Mount 1",
                            ShipId = 2
                        },
                        new
                        {
                            Id = 7,
                            AlwaysExists = true,
                            MountName = "AA Mount 2",
                            ShipId = 2
                        },
                        new
                        {
                            Id = 8,
                            AlwaysExists = true,
                            MountName = "AA Mount 3",
                            ShipId = 2
                        },
                        new
                        {
                            Id = 9,
                            AlwaysExists = true,
                            MountName = "AA Mount 4",
                            ShipId = 2
                        },
                        new
                        {
                            Id = 10,
                            AlwaysExists = true,
                            MountName = "AA Mount 5",
                            ShipId = 2
                        },
                        new
                        {
                            Id = 11,
                            AlwaysExists = true,
                            MountName = "AA Mount 6",
                            ShipId = 2
                        },
                        new
                        {
                            Id = 12,
                            AlwaysExists = true,
                            MountName = "Aft Battery 1",
                            ShipId = 3
                        },
                        new
                        {
                            Id = 13,
                            AlwaysExists = true,
                            MountName = "AA Battery 1",
                            ShipId = 3
                        },
                        new
                        {
                            Id = 14,
                            AlwaysExists = true,
                            MountName = "ASM Rack 1",
                            ShipId = 3
                        },
                        new
                        {
                            Id = 15,
                            AlwaysExists = true,
                            MountName = "ASM Rack 2",
                            ShipId = 3
                        },
                        new
                        {
                            Id = 16,
                            AlwaysExists = true,
                            MountName = "ASM Rack 3",
                            ShipId = 3
                        },
                        new
                        {
                            Id = 18,
                            AlwaysExists = false,
                            MountName = "Hidden Mount 1",
                            ShipId = 4
                        },
                        new
                        {
                            Id = 19,
                            AlwaysExists = false,
                            MountName = "Hidden Mount 2",
                            ShipId = 4
                        });
                });

            modelBuilder.Entity("MeerJager.Data.Database.WeaponToMountMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MountId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MountId");

                    b.HasIndex("WeaponId");

                    b.ToTable("WeaponToMountMap");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MountId = 1,
                            WeaponId = 1
                        },
                        new
                        {
                            Id = 2,
                            MountId = 2,
                            WeaponId = 1
                        },
                        new
                        {
                            Id = 3,
                            MountId = 3,
                            WeaponId = 1
                        },
                        new
                        {
                            Id = 4,
                            MountId = 4,
                            WeaponId = 1
                        },
                        new
                        {
                            Id = 5,
                            MountId = 1,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 6,
                            MountId = 2,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 7,
                            MountId = 3,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 8,
                            MountId = 4,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 9,
                            MountId = 17,
                            WeaponId = 3
                        },
                        new
                        {
                            Id = 10,
                            MountId = 5,
                            WeaponId = 4
                        },
                        new
                        {
                            Id = 11,
                            MountId = 6,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 12,
                            MountId = 7,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 13,
                            MountId = 8,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 14,
                            MountId = 9,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 15,
                            MountId = 10,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 16,
                            MountId = 11,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 17,
                            MountId = 12,
                            WeaponId = 5
                        },
                        new
                        {
                            Id = 18,
                            MountId = 13,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 19,
                            MountId = 14,
                            WeaponId = 6
                        },
                        new
                        {
                            Id = 20,
                            MountId = 15,
                            WeaponId = 6
                        },
                        new
                        {
                            Id = 21,
                            MountId = 16,
                            WeaponId = 4
                        },
                        new
                        {
                            Id = 22,
                            MountId = 18,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 23,
                            MountId = 18,
                            WeaponId = 5
                        },
                        new
                        {
                            Id = 25,
                            MountId = 19,
                            WeaponId = 2
                        },
                        new
                        {
                            Id = 24,
                            MountId = 19,
                            WeaponId = 5
                        });
                });

            modelBuilder.Entity("MeerJager.Data.Database.Ship", b =>
                {
                    b.HasOne("MeerJager.Data.Database.Class", "Class")
                        .WithMany("Ships")
                        .HasForeignKey("ClassId");

                    b.HasOne("MeerJager.Data.Database.Range", "Health")
                        .WithMany()
                        .HasForeignKey("HealthId");

                    b.HasOne("MeerJager.Data.Database.Range", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("MeerJager.Data.Database.Weapon", b =>
                {
                    b.HasOne("MeerJager.Data.Database.Range", "Damage")
                        .WithMany()
                        .HasForeignKey("DamageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeerJager.Data.Database.Range", "Range")
                        .WithMany()
                        .HasForeignKey("RangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeerJager.Data.Database.WeaponMount", b =>
                {
                    b.HasOne("MeerJager.Data.Database.Ship", "Ship")
                        .WithMany("WeaponMounts")
                        .HasForeignKey("ShipId");
                });

            modelBuilder.Entity("MeerJager.Data.Database.WeaponToMountMap", b =>
                {
                    b.HasOne("MeerJager.Data.Database.WeaponMount", "Mount")
                        .WithMany("PossibleWeapons")
                        .HasForeignKey("MountId");

                    b.HasOne("MeerJager.Data.Database.Weapon", "Weapon")
                        .WithMany("PossibleMounts")
                        .HasForeignKey("WeaponId");
                });
#pragma warning restore 612, 618
        }
    }
}
